{{- $name := print .Release.Name "-" $.Values.environment "-" "web" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name }}-envoy-config
  labels:
    release: {{ $name }}
data:
  envoy.yaml: |-
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: [ "*" ]
                          routes:
                            - match: { prefix: "/actuator" }
                              route:
                                cluster: {{ $name }}-http
                            - match: { prefix: "/api" }
                              route:
                                cluster: {{ $name }}-http
                            - match: { prefix: "/" }
                              route:
                                cluster: {{ $name }}-grpc
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,authorization,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "10m"
                            expose_headers: grpc-status,grpc-message,Content-Length,Content-Range
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                      - name: envoy.filters.http.cors
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                      - name: envoy.filters.http.health_check
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                          pass_through_mode: false
                          cluster_min_healthy_percentages:
                            {{ $name }}-grpc:
                              value: 50.0
                            {{ $name }}-http:
                              value: 50.0
                          headers:
                            - name: ':path'
                              prefix_match: '/readyz'
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    access_log:
                      - name: hops-api
                        filter:
                          not_health_check_filter: {}
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
      clusters:
        - name: {{ $name }}-grpc
          connect_timeout: 0.25s
          type: logical_dns
          http2_protocol_options: { }
          lb_policy: round_robin
          health_checks:
            - timeout: 1s
              interval: 1s
              healthy_threshold: 1
              unhealthy_threshold: 2
              no_traffic_interval: 1s
              grpc_health_check: {}
          load_assignment:
            cluster_name: {{ $name }}-grpc
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: {{ .Values.api.grpc.port }}
        - name: {{ $name }}-http
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          health_checks:
            - timeout: 1s
              interval: 1s
              healthy_threshold: 1
              unhealthy_threshold: 2
              no_traffic_interval: 1s
              http_health_check:
                host: 127.0.0.1
                path: /actuator/health
          load_assignment:
            cluster_name: {{ $name }}-http
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: {{ .Values.api.http.port }}
