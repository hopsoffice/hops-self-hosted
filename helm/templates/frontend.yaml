{{- $name := print .Release.Name "-" "frontend" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: {{ $name }}
  name: {{ $name }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
    spec:
      containers:
        - image: "{{ .Values.registryUrl }}/{{ .Values.frontend.repo.name }}{{- if .Values.frontend.repo.tag -}}
          :{{ .Values.frontend.repo.tag }}
        {{- else if .Values.frontend.repo.hash -}}
          @sha256:{{ .Values.frontend.repo.hash }}
        {{- end }}"
          imagePullPolicy: Always
          name: {{ $name }}
          ports:
            - containerPort: {{ .Values.frontend.port }}
          env:
            {{- range .Values.secrets.keys }}
            - name: {{ . | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.secrets.name }}
                  key: {{ . }}
            {{- end }}
            {{- range .Values.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            - name: API_URL
              value: "//{{ .Values.apiGrpc.host }}"
            - name: OAUTH_URL
              value: "//{{ .Values.oauth.host }}"
          resources:
            requests:
              memory: {{ .Values.memory.requests | default "1Gi" }}
            limits:
              memory: {{ .Values.memory.limits | default "1Gi" }}
          startupProbe:
            httpGet:
              path: "/"
              port: {{ .Values.frontend.port }}
            initialDelaySeconds: 10
            periodSeconds: 1
            failureThreshold: 25
          livenessProbe:
            httpGet:
              path: "/"
              port: {{ .Values.frontend.port }}
            periodSeconds: 5
            failureThreshold: 3
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ $name }}
  name: {{ $name }}
spec:
  selector:
    app.kubernetes.io/name: {{ $name }}
  ports:
    - name: {{ $name }}
      port: 80
      protocol: TCP
      targetPort: {{ .Values.frontend.port }}
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $name }}
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
    - host: {{ .Values.frontend.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $name }}
                port:
                  number: {{ .Values.frontend.port }}
---
